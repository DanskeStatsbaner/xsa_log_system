PROCEDURE "DataWareHouse.Database.Procedures::agents_monitor"( )
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN SEQUENTIAL EXECUTION

DECLARE k Integer;
DECLARE LOG_TIMESTAMP Timestamp;
DECLARE ingesttoken NVARCHAR(2500);
DECLARE AGENT_NAME, AGENT_VERSION, AGENT_STATUS, ENVIRONMENT, LOG_LEVEL  NVARCHAR(250);
DECLARE FREE_PHYSICAL_MEMORY_GB, FREE_SWAP_SPACE_GB, USED_PHYSICAL_MEMORY_GB, USED_SWAP_SPACE DECIMAL (10,2);
DECLARE seconds_Dif INTEGER = SECONDS_BETWEEN(CURRENT_UTCTIMESTAMP,CURRENT_TIMESTAMP);

LOG_TIMESTAMP = CURRENT_TIMESTAMP;

AGENT_EVENTS =
SELECT 
	"AGENT_NAME",
	TO_DECIMAL(("FREE_PHYSICAL_MEMORY"/1024/1024/1024),10,2) AS "FREE_PHYSICAL_MEMORY_GB" ,
	TO_DECIMAL(("FREE_SWAP_SPACE"/1024/1024/1024),10,2) AS "FREE_SWAP_SPACE_GB" ,
	TO_DECIMAL(("USED_PHYSICAL_MEMORY"/1024/1024/1024),10,2) AS "USED_PHYSICAL_MEMORY_GB" ,
	TO_DECIMAL(("USED_SWAP_SPACE"/1024/1024/1024),10,2) AS "USED_SWAP_SPACE" ,
	ADD_SECONDS("UTC_TIMESTAMP",:seconds_Dif) AS "LOG_TIMESTAMP",
	"AGENT_VERSION",
	"AGENT_STATUS"
FROM "DataWareHouse.Database.Virtualtables::M_AGENTS"
;


SELECT DISTINCT
	CASE 
		WHEN "SYSTEM_ID" = 'NU0' THEN 'DEV'
		WHEN "SYSTEM_ID" = 'NPT'	THEN 'TEST'
		WHEN "SYSTEM_ID" = 'NP0' THEN 'PROD'
		END AS "ENVIRONMENT" INTO ENVIRONMENT
		FROM "DataWareHouse.Database.Virtualtables::M_DATABASE";



	IF RECORD_COUNT(:AGENT_EVENTS) >= 1 THEN
		FOR k IN 1..RECORD_COUNT(:AGENT_EVENTS) DO 
		AGENT_NAME = :AGENT_EVENTS."AGENT_NAME"[:k];
		FREE_PHYSICAL_MEMORY_GB = :AGENT_EVENTS."FREE_PHYSICAL_MEMORY_GB"[:k];
		FREE_SWAP_SPACE_GB = :AGENT_EVENTS."FREE_SWAP_SPACE_GB"[:k];
		USED_PHYSICAL_MEMORY_GB = :AGENT_EVENTS."USED_PHYSICAL_MEMORY_GB"[:k];
		USED_SWAP_SPACE = :AGENT_EVENTS."USED_SWAP_SPACE"[:k];
		LOG_TIMESTAMP = :AGENT_EVENTS."LOG_TIMESTAMP"[:k];
		AGENT_VERSION = :AGENT_EVENTS."AGENT_VERSION"[:k];
		AGENT_STATUS = :AGENT_EVENTS."AGENT_STATUS"[:k];
	
	IF :AGENT_STATUS = 'CONNECTED'
		THEN	LOG_LEVEL = 'INFO';
	ELSE LOG_LEVEL = 'WARNING';
	END IF;
			CALL "DataWareHouse.Database.Synonyms::humio"(
    MESSAGE => 'Native HANA system log',
    LOG_LEVEL => :LOG_LEVEL,
    HOST => 'HANA',
    SRC => 'agents_monitor.hdbprocedure',
       ATTRIBUTES => '"LOG_TIMESTAMP":"' || :LOG_TIMESTAMP || '", "ENVIRONMENT":"' || :ENVIRONMENT || '", "AGENT_NAME":"' || :AGENT_NAME 
       ||  '", "FREE_PHYSICAL_MEMORY_GB":"' || :FREE_PHYSICAL_MEMORY_GB || '", "FREE_SWAP_SPACE_GB":"' || :FREE_SWAP_SPACE_GB 
       || '", "USED_PHYSICAL_MEMORY_GB":"' || :USED_PHYSICAL_MEMORY_GB  || '", "USED_SWAP_SPACE":"' || :USED_SWAP_SPACE 
       || '", "LOG_TIMESTAMP":"' || :LOG_TIMESTAMP || '", "AGENT_VERSION":"' || :AGENT_VERSION ||  '", "AGENT_STATUS":"' || :AGENT_STATUS 
       ||'"',
    JWT => :ingesttoken,
    EXCEPTION_ON_ERROR => 1
);
		END FOR;
	
	END IF; 

END