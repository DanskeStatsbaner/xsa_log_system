PROCEDURE "DataWareHouse.Database.Procedures::db_instance_memory"( )
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN

DECLARE k Integer;
DECLARE LOG_TIMESTAMP Timestamp;
DECLARE ingesttoken NVARCHAR(2500);
DECLARE ENVIRONMENT, LOG_LEVEL, HOST  NVARCHAR(250);
DECLARE AVAILABLE_PHYSICAL_MEMORY_GB, USED_PHYSICAL_MEMORY_GB, GLOBAL_ALLOCATION_LIMIT_GB, INSTANCE_TOTAL_MEMORY_USED_SIZE_GB DECIMAL (10,2);
DECLARE seconds_Dif INTEGER = SECONDS_BETWEEN(CURRENT_UTCTIMESTAMP,CURRENT_TIMESTAMP);

LOG_TIMESTAMP = CURRENT_TIMESTAMP;


LOG_LEVEL = 'INFO';
HOST = 'DATABASE';

DB_MEM =
SELECT
"USED_PHYSICAL_MEMORY"/1024/1024/1024 + "FREE_PHYSICAL_MEMORY"/1024/1024/1024 AS "AVAILABLE_PHYSICAL_MEMORY_GB",
"USED_PHYSICAL_MEMORY"/1024/1024/1024 AS "USED_PHYSICAL_MEMORY_GB",
"ALLOCATION_LIMIT"/1024/1024/1024 AS "GLOBAL_ALLOCATION_LIMIT_GB",
"INSTANCE_TOTAL_MEMORY_USED_SIZE"/1024/1024/1024 AS "INSTANCE_TOTAL_MEMORY_USED_SIZE_GB"
FROM  "DataWareHouse.Database.Virtualtables::M_HOST_RESOURCE_UTILIZATION";


  CALL "DataWareHouse.Database.Synonyms::token"(
	APP => 'AP_HUMIO',
	EXCEPTION_ON_ERROR => 1,
	JWT => ingesttoken
);

SELECT DISTINCT
	CASE 
		WHEN "SYSTEM_ID" = 'NU0' THEN 'DEV'
		WHEN "SYSTEM_ID" = 'NPT'	THEN 'TEST'
		WHEN "SYSTEM_ID" = 'NP0' THEN 'PROD'
		END AS "ENVIRONMENT" INTO ENVIRONMENT
		FROM "DataWareHouse.Database.Virtualtables::M_DATABASE";
		
		IF RECORD_COUNT(:DB_MEM) >= 1 THEN
		FOR k IN 1..RECORD_COUNT(:DB_MEM) DO 
		AVAILABLE_PHYSICAL_MEMORY_GB	= :DB_MEM."AVAILABLE_PHYSICAL_MEMORY_GB"[:k];
		USED_PHYSICAL_MEMORY_GB	= :DB_MEM."USED_PHYSICAL_MEMORY_GB"[:k];
		GLOBAL_ALLOCATION_LIMIT_GB	= :DB_MEM."GLOBAL_ALLOCATION_LIMIT_GB"[:k];
		INSTANCE_TOTAL_MEMORY_USED_SIZE_GB	= :DB_MEM."INSTANCE_TOTAL_MEMORY_USED_SIZE_GB"[:k];



	CALL "DataWareHouse.Database.Synonyms::humio"(
    	MESSAGE => 'Native HANA system log',
		LOG_LEVEL => :LOG_LEVEL,
    	HOST => 'HANA',
    	SRC => 'db_instance_memory.hdbprocedure',
    	ATTRIBUTES => '"LOG_TIMESTAMP":"' || :LOG_TIMESTAMP || '", "ENVIRONMENT":"' || :ENVIRONMENT || '", "HOST":"' || :HOST 
    	|| '", "AVAILABLE_PHYSICAL_MEMORY_GB":"' || :AVAILABLE_PHYSICAL_MEMORY_GB || '", "USED_PHYSICAL_MEMORY_GB":"' || :USED_PHYSICAL_MEMORY_GB 
    	|| '", "GLOBAL_ALLOCATION_LIMIT_GB":"' || :GLOBAL_ALLOCATION_LIMIT_GB 
    	|| '", "INSTANCE_TOTAL_MEMORY_USED_SIZE_GB":"' || :INSTANCE_TOTAL_MEMORY_USED_SIZE_GB
             ||'"',
    JWT => :ingesttoken,
    EXCEPTION_ON_ERROR => 1
);
		END FOR;
	
	END IF; 


END