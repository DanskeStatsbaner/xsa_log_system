PROCEDURE "DataWareHouse.Database.Procedures::sys_m_disks"( )
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN SEQUENTIAL EXECUTION

DECLARE k Integer;
DECLARE LOG_TIMESTAMP Timestamp;
DECLARE ingesttoken NVARCHAR(2500);
DECLARE ENVIRONMENT, LOG_LEVEL, DISK_ID, DEVICE_ID, HOST, PATH, SUBPATH, FILESYSTEM_TYPE, USAGE_TYPE, MOUNT_SOURCE, MOUNT_PATH, MOUNT_DETAILS  NVARCHAR(250);
DECLARE TOTAL_SIZE_GB, USED_SIZE_GB, TOTAL_DEVICE_SIZE_GB DECIMAL (10,2);


LOG_TIMESTAMP = CURRENT_TIMESTAMP;


LOG_LEVEL = 'INFO';



SYS_M_DISKS =
SELECT 
	DISK_ID,
	DEVICE_ID,
	HOST,
	PATH,
	SUBPATH,
	FILESYSTEM_TYPE,
	USAGE_TYPE,
	TO_DECIMAL(("TOTAL_SIZE"/1024/1024/1024),10,2) AS "TOTAL_SIZE_GB" ,
	TO_DECIMAL(("USED_SIZE"/1024/1024/1024),10,2) AS "USED_SIZE_GB" ,
	TO_DECIMAL(("TOTAL_DEVICE_SIZE"/1024/1024/1024),10,2) AS "TOTAL_DEVICE_SIZE_GB" ,
	MOUNT_SOURCE,
	MOUNT_PATH,
	MOUNT_DETAILS
FROM "DataWareHouse.Database.Virtualtables::M_DISKS";




SELECT DISTINCT
	CASE 
		WHEN "SYSTEM_ID" = 'NU0' THEN 'DEV'
		WHEN "SYSTEM_ID" = 'NPT'	THEN 'TEST'
		WHEN "SYSTEM_ID" = 'NP0' THEN 'PROD'
		END AS "ENVIRONMENT" INTO ENVIRONMENT
		FROM "DataWareHouse.Database.Virtualtables::M_DATABASE";



	IF RECORD_COUNT(:SYS_M_DISKS) >= 1 THEN
		FOR k IN 1..RECORD_COUNT(:SYS_M_DISKS) DO 
			DISK_ID = :SYS_M_DISKS."DISK_ID"[:k];
			DEVICE_ID = :SYS_M_DISKS."DEVICE_ID"[:k];
			HOST = :SYS_M_DISKS."HOST"[:k];
			PATH = :SYS_M_DISKS."PATH"[:k];
		 	SUBPATH   = :SYS_M_DISKS."SUBPATH"[:k];
		    FILESYSTEM_TYPE = :SYS_M_DISKS."FILESYSTEM_TYPE"[:k];
		    USAGE_TYPE = :SYS_M_DISKS."USAGE_TYPE"[:k];
		    TOTAL_SIZE_GB  = :SYS_M_DISKS."TOTAL_SIZE_GB"[:k];
		    USED_SIZE_GB   = :SYS_M_DISKS."USED_SIZE_GB"[:k];
			TOTAL_DEVICE_SIZE_GB = :SYS_M_DISKS."TOTAL_DEVICE_SIZE_GB"[:k];
		    MOUNT_SOURCE   = :SYS_M_DISKS."MOUNT_SOURCE"[:k];
		    MOUNT_PATH   = :SYS_M_DISKS."MOUNT_PATH"[:k];
		    MOUNT_DETAILS   = :SYS_M_DISKS."MOUNT_DETAILS"[:k];




	CALL "DataWareHouse.Database.Synonyms::humio"(
    	MESSAGE => 'Native HANA system log',
		LOG_LEVEL => :LOG_LEVEL,
    	HOST => 'HANA',
    	SRC => 'sys_m_disks.hdbprocedure',
    	ATTRIBUTES => '"LOG_TIMESTAMP":"' || :LOG_TIMESTAMP || '", "ENVIRONMENT":"' || :ENVIRONMENT || '", "DISK_ID":"' || :DISK_ID || '", "DEVICE_ID":"' || :DEVICE_ID || '", "HOST":"' || :HOST
       || '", "PATH":"' || :PATH  || '", "SUBPATH":"' || :SUBPATH  || '", "FILESYSTEM_TYPE":"' || :FILESYSTEM_TYPE || '", "USAGE_TYPE":"' || :USAGE_TYPE ||  '", "TOTAL_SIZE_GB":"' || :TOTAL_SIZE_GB 
       || '", "USED_SIZE_GB":"' || :USED_SIZE_GB || '", "TOTAL_DEVICE_SIZE_GB":"' || :TOTAL_DEVICE_SIZE_GB ||  '", "MOUNT_SOURCE":"' || :MOUNT_SOURCE
       || '", "MOUNT_PATH":"' || :MOUNT_PATH || '", "MOUNT_DETAILS":"' || :MOUNT_DETAILS 
       ||'"',
    JWT => :ingesttoken,
    EXCEPTION_ON_ERROR => 1
);
		END FOR;
	
	END IF; 

END